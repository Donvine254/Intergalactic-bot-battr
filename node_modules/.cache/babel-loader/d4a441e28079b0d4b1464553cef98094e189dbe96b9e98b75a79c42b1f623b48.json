{"ast":null,"code":"var _jsxFileName = \"/home/donvine/Development/Intergalactic-Bot-Battlr/code-challenge/src/components/BotCollection.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport BotCard from \"./BotCard\";\nimport BotSpecs from \"./BotSpecs\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction BotCollection(_ref) {\n  _s();\n  let {\n    bots,\n    onEnlist,\n    onDischarge\n  } = _ref;\n  const [selectedBot, setSelectedBot] = useState(null);\n  const handleBotClick = bot => {\n    setSelectedBot(bot);\n  };\n  function handleBotDischarge(bot) {\n    onDischarge(bot);\n  }\n  if (selectedBot) {\n    return /*#__PURE__*/_jsxDEV(BotSpecs, {\n      bot: selectedBot,\n      enlistBot: onEnlist,\n      onDischarge: dis,\n      navigateBack: handleGoBack\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 7\n    }, this);\n  }\n  function handleGoBack() {\n    setSelectedBot(null);\n  }\n  const botCards = bots.map(bot => /*#__PURE__*/_jsxDEV(BotCard, {\n    bot: bot,\n    botFunction: handleBotClick,\n    onDischargeBot: handleBotDischarge\n  }, bot.id, false, {\n    fileName: _jsxFileName,\n    lineNumber: 30,\n    columnNumber: 5\n  }, this));\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      style: {\n        textAlign: \"center\"\n      },\n      children: \"Collection of all bots\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"ui four column grid\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"row\",\n        children: botCards\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n}\n_s(BotCollection, \"3l4Waxj/7PpzALMxEVPDr3iuT+c=\");\n_c = BotCollection;\nexport default BotCollection;\nvar _c;\n$RefreshReg$(_c, \"BotCollection\");","map":{"version":3,"names":["React","useState","BotCard","BotSpecs","jsxDEV","_jsxDEV","Fragment","_Fragment","BotCollection","_ref","_s","bots","onEnlist","onDischarge","selectedBot","setSelectedBot","handleBotClick","bot","handleBotDischarge","enlistBot","dis","navigateBack","handleGoBack","fileName","_jsxFileName","lineNumber","columnNumber","botCards","map","botFunction","onDischargeBot","id","children","style","textAlign","className","_c","$RefreshReg$"],"sources":["/home/donvine/Development/Intergalactic-Bot-Battlr/code-challenge/src/components/BotCollection.js"],"sourcesContent":["import React, { useState } from \"react\";\nimport BotCard from \"./BotCard\";\nimport BotSpecs from \"./BotSpecs\";\n\nfunction BotCollection({ bots, onEnlist, onDischarge }) {\n  const [selectedBot, setSelectedBot] = useState(null);\n  const handleBotClick = (bot) => {\n    setSelectedBot(bot);\n  };\n  function handleBotDischarge(bot) {\n    onDischarge(bot);\n  }\n\n  if (selectedBot) {\n    return (\n      <BotSpecs\n        bot={selectedBot}\n        enlistBot={onEnlist}\n        onDischarge={dis}\n        navigateBack={handleGoBack}\n      />\n    );\n  }\n\n  function handleGoBack() {\n    setSelectedBot(null);\n  }\n\n  const botCards = bots.map((bot) => (\n    <BotCard\n      key={bot.id}\n      bot={bot}\n      botFunction={handleBotClick}\n      onDischargeBot={handleBotDischarge}\n    />\n  ));\n\n  return (\n    <>\n      <h1 style={{ textAlign: \"center\" }}>Collection of all bots</h1>\n      <div className=\"ui four column grid\">\n        <div className=\"row\">{botCards}</div>\n      </div>\n    </>\n  );\n}\n\nexport default BotCollection;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,OAAOC,OAAO,MAAM,WAAW;AAC/B,OAAOC,QAAQ,MAAM,YAAY;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAAA,SAAAC,QAAA,IAAAC,SAAA;AAElC,SAASC,aAAaA,CAAAC,IAAA,EAAkC;EAAAC,EAAA;EAAA,IAAjC;IAAEC,IAAI;IAAEC,QAAQ;IAAEC;EAAY,CAAC,GAAAJ,IAAA;EACpD,MAAM,CAACK,WAAW,EAAEC,cAAc,CAAC,GAAGd,QAAQ,CAAC,IAAI,CAAC;EACpD,MAAMe,cAAc,GAAIC,GAAG,IAAK;IAC9BF,cAAc,CAACE,GAAG,CAAC;EACrB,CAAC;EACD,SAASC,kBAAkBA,CAACD,GAAG,EAAE;IAC/BJ,WAAW,CAACI,GAAG,CAAC;EAClB;EAEA,IAAIH,WAAW,EAAE;IACf,oBACET,OAAA,CAACF,QAAQ;MACPc,GAAG,EAAEH,WAAY;MACjBK,SAAS,EAAEP,QAAS;MACpBC,WAAW,EAAEO,GAAI;MACjBC,YAAY,EAAEC;IAAa;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAC5B,CAAC;EAEN;EAEA,SAASJ,YAAYA,CAAA,EAAG;IACtBP,cAAc,CAAC,IAAI,CAAC;EACtB;EAEA,MAAMY,QAAQ,GAAGhB,IAAI,CAACiB,GAAG,CAAEX,GAAG,iBAC5BZ,OAAA,CAACH,OAAO;IAENe,GAAG,EAAEA,GAAI;IACTY,WAAW,EAAEb,cAAe;IAC5Bc,cAAc,EAAEZ;EAAmB,GAH9BD,GAAG,CAACc,EAAE;IAAAR,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAIZ,CACF,CAAC;EAEF,oBACErB,OAAA,CAAAE,SAAA;IAAAyB,QAAA,gBACE3B,OAAA;MAAI4B,KAAK,EAAE;QAAEC,SAAS,EAAE;MAAS,CAAE;MAAAF,QAAA,EAAC;IAAsB;MAAAT,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eAC/DrB,OAAA;MAAK8B,SAAS,EAAC,qBAAqB;MAAAH,QAAA,eAClC3B,OAAA;QAAK8B,SAAS,EAAC,KAAK;QAAAH,QAAA,EAAEL;MAAQ;QAAAJ,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAM;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAClC,CAAC;EAAA,eACN,CAAC;AAEP;AAAChB,EAAA,CAzCQF,aAAa;AAAA4B,EAAA,GAAb5B,aAAa;AA2CtB,eAAeA,aAAa;AAAC,IAAA4B,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}